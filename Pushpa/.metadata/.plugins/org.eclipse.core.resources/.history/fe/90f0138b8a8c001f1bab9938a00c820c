package AssignmentDS;

public class NoLinkedList {
//
//	Write a program to create linked list with given number in which data part 
//	of each node contains individual digit of the number.
//	(Ex. Suppose the number is 368 then the nodes of linked list should contain 3, 6, 8)	
//	
	{
		
		
		
	NoNode root;//linked list uses container ship-uses has a relation
	void create_list()
	{
	root=null;//preparing with empty root 
	}
	
	void insert_left(int data)
	{
	Node n=new Node(data);
	if(root==null)
	{
	root=n;//n becomes 1st so root
	}
	else
	{
	n.next=root;//1
	root=n;//2 
	}
	System.out.println(root.data+" inserted");
	
	}
	
	
	
	void delete_left()
	{
	if(root==null)
	{
	System.out.println("Empty List");
	}
	else
	{
	Node t;
	t=root;//1 root=root.next;//2 
	System.out.println(t.data+" deleted");
	}
	}
	
	
	
	
	
	void insert_right(int data)
	{
	Node n=new Node(data);
	if(root==null)
	root=n;//n becomes 1st so root=
	 else
	{
	Node t=root;
	while(t.next!=null)
	{ t=t.next;
	
	}
	t.next=n;
	}
	
	System.out.println(root.data+" inserted");
	
	}
	
	
	
	
	
	void delete_right()
	{
	if(root==null)
	System.out.println("Empty List");
	else
	{
	Node t,t2;
	t=t2=root;//1 
	while(t.next!=null)
	{
	t2=t;
	t=t.next;
	}
	if(t==root)//single node root=null;//reset root as only node left else
	t2.next = null;
	System.out.println(t.data + " deleted");
	}
	}
	
	
	void print_list()
	{
	if(root==null)
	System.out.println("List Empty");
	else
	{
	Node t=root;
	while(t!=null)
	{ System.out.print("|"+t.data+"|->");
	t=t.next;
	}
	}
	}
	
	
	
	



	
	//delete
	
}
