package Queue_Examples;

public class Queue_Class {
	 private int Q[], MaxSize, front,rear;

	    public void create_Queue(int size) {
	        front=0;
	        rear=-1;
	        Q=new int[size];
	        MaxSize = size;//init MaxSize
	    }

	    void Enqueue(int e) {//inserting in queue
	        rear++;
	        Q[rear] = e;
	        System.out.println("Element " + e + " inserted:");
	    }

	    boolean is_Full() {
	        if (front == MaxSize - 1)
	            return true;
	        else
	            return false;
	    }

	    int Dequeue() {
	        int temp = Q[front];
	        front++;
	        return (temp);

	        //return(stack[tos--]);
	    }

	    boolean is_Empty() {
	        if (front>rear)
	            return true;
	        else
	            return false;
	    }


	    void print_Stack() {//lifo print
	        System.out.println("Stack has");
	        for (int i =front ; i <=rear; i++) {
	            System.out.print(Q[i]+"--");
	        }

	    }

		
}
